{"version":3,"sources":["Components/login.js","Components/utils.js","firebase.js","Components/Login.jsx","Components/Header.jsx","Components/Profile.jsx","Components/Room.jsx","App.js","serviceWorker.js","index.js"],"names":["enterButton","names","login","description","getRndInteger","min","max","Math","floor","random","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","database","firestore","styles","mainDiv","display","alignItems","flexDirection","title","fontFamily","fontSize","fontWeight","textAlign","paddingBottom","funnySentance","Login","defaultName","length","state","identify","joinButton","name","redirect","tag","roomId","bool","this","setState","window","localStorage","setItem","uuidv4","collection","get","then","querySnapshot","forEach","doc","console","log","id","data","setRedirect","bind","alert","style","TextField","variant","defaultValue","label","required","onChange","event","setName","target","value","paddingTop","Button","color","onClick","checkValidity","push","to","React","Component","Header","props","useState","help","setHelp","profile","setProfile","rooms","setRooms","justifyContent","icon","renderSide","what","IconButton","left","right","Dialog","open","onClose","DialogTitle","textFieldDiv","Profile","username","getItem","uuid","showSucess","showError","tmp","Snackbar","autoHideDuration","severity","width","setUsername","currentTarget","saveUsername","InputProps","readOnly","resetUuid","useStyles","makeStyles","theme","root","height","roomName","messageSender","textDecoration","messageText","messageDate","messageBar","position","bottom","alignSelf","messageDisplay","overflow","maxHeight","sendButton","messageInput","Room","st","room","useParams","undefined","roomInfo","setRoomInfo","messageList","setMessageList","userInfo","setUserInfo","isRoomBad","setIsRoomBad","message","setMessage","useEffect","exists","onSnapshot","orderBy","map","Paper","className","sender","date","toDate","toLocaleString","content","multiline","type","set","Timestamp","fromDate","Date","App","exact","path","children","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.43dabbd2.chunk.js","sourcesContent":["// Random sentances for the Login Component\n\nexport const enterButton = [\n    \"Enter the jungle\",\n    \"Join the party\",\n    \"Join the randomness\",\n    \"Join the chat\",\n    \"Enter Dexter's Laboratory\"\n]\n\nexport const names = [\n    \"John Doe\",\n    \"Jane Doe\",\n    \"Dexter (the scientist)\",\n]\n\nexport const login = [\n    \"Who are you ?\",\n    \"Identify yourself\",\n    \"Name must you enter\",\n]\n\nexport const description = [\n    \"A website where you chat with randoms\",\n    \"A website where a lot of things are random\",\n    \"A website where you can write a bunch of nonsense\"\n]","export function getRndInteger(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\n}\n\nexport function getRndFloat(min, max) {\n    return (Math.random() * (max - min + 1)) + min;\n}","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAAJQ6cSdyEOg6Jmtu0kLte2wn4VqsTCrM\",\n    authDomain: \"rchat-87159.firebaseapp.com\",\n    databaseURL: \"https://rchat-87159.firebaseio.com\",\n    projectId: \"rchat-87159\",\n    storageBucket: \"rchat-87159.appspot.com\",\n    messagingSenderId: \"298820429100\",\n    appId: \"1:298820429100:web:79e2ff175c526737423889\",\n    measurementId: \"G-6DK77K31E2\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst database = firebaseApp.firestore();\n\nexport default database;","import React from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { Redirect } from 'react-router';\n\nimport { description, enterButton, login, names } from './login';\nimport { getRndInteger } from './utils';\n\nimport database from '../firebase';\n\nconst styles = {\n    mainDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n    },\n    title: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 50,\n        fontWeight: 900,\n        textAlign: 'center',\n        paddingBottom: 0\n    },\n    funnySentance: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 30,\n        fontWeight: 900,\n        textAlign: 'center',\n        paddingBottom: 50\n    }\n}\n\nclass Login extends React.Component {\n    constructor() {\n        super();\n        this.defaultName = names[getRndInteger(0, names.length - 1)];\n        this.state = {\n            description: description[getRndInteger(0, description.length - 1)],\n            defaultName: this.defaultName,\n            identify: login[getRndInteger(0, login.length - 1)],\n            joinButton: enterButton[getRndInteger(0, enterButton.length - 1)],\n            name: this.defaultName,\n            redirect: false,\n            tag: \"random\",\n            roomId: \"\",\n        }\n    }\n\n    setRedirect(bool) {\n        this.setState({redirect: bool});\n    }\n\n    setName(name) {\n        this.setState({name: name});\n    }\n\n    checkValidity() {\n        if (this.state.name !== \"\" && this.state.name !== null) {\n            window.localStorage.setItem(\"username\", this.state.name);\n            window.localStorage.setItem(\"uuid\", uuidv4());\n            database.collection(\"rooms\").get().then(function(querySnapshot) {\n                querySnapshot.forEach(function(doc) {\n                    console.log(doc.id, \" => \", doc.data());\n                    if (doc.data().tag === this.state.tag) {\n                        console.log(\"Room found: Going in\");\n                        this.setState({roomId: doc.id});\n                        this.setRedirect(true);\n                    }\n                }.bind(this))\n                if (!this.state.redirect) {\n                }\n            }.bind(this))\n        } else {\n            alert(\"Invalid name :(\");\n        }\n    }\n\n    render() {\n        return (\n        <div style={styles.mainDiv}>\n            <h1 style={styles.title}>Rchat</h1>\n            <h3 style={styles.funnySentance}>\n                {this.state.description}\n            </h3>\n            <TextField\n                id=\"id\"\n                variant=\"outlined\"\n                defaultValue={this.state.defaultName}\n                label={this.state.identify}\n                required\n                onChange={(event) => this.setName(event.target.value)} \n            />\n            <div style={{paddingTop: 20}}/>\n            <TextField\n                id=\"tag\"\n                variant=\"outlined\"\n                defaultValue={this.state.tag}\n                label=\"Enter a tag\"\n                required\n                onChange={(event) => this.setState({tag: event.target.value})} \n            />\n            <div style={{paddingTop: 20}}/>\n            <Button color=\"primary\" variant=\"contained\" onClick={() => this.checkValidity()}>\n                {this.state.joinButton}\n            </Button>\n            {this.state.redirect && <Redirect push to={`/rooms/${this.state.roomId}`} />}\n        </div>\n        );\n    }\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect } from 'react-router';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport HelpIcon from '@material-ui/icons/Help';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ListIcon from '@material-ui/icons/List';\n\nfunction Header(props) {\n\n    const [help, setHelp] = useState(false);\n    const [profile, setProfile] = useState(false);\n    const [rooms, setRooms] = useState(false);\n\n    const styles = {\n        mainDiv: {\n            display: 'flex',\n            justifyContent: 'space-around',\n            flexDirection: 'row',\n        },\n        title: {\n            fontFamily: 'Roboto Mono',\n            fontSize: 50,\n            fontWeight: 900,\n            textAlign: 'center',\n            paddingBottom: 0,\n        },\n        icon: {\n            fontSize: 50,\n            color: 'black',\n        },\n    }\n\n    function renderSide(what) {\n        if (what === 'profile')\n            return (\n            <IconButton onClick={() => setProfile(true)}>\n                <PersonIcon style={styles.icon} />\n            </IconButton>\n            )\n        if (what === 'help')\n            return (\n            <IconButton onClick={() => setHelp(true)}>\n                <HelpIcon style={styles.icon} />\n            </IconButton>\n            )\n        if (what === 'rooms')\n            return (\n            <IconButton onClick={() => setRooms(true)}>\n                <ListIcon style={styles.icon} />\n            </IconButton>\n            )\n    }\n\n    return (\n        <div style={styles.mainDiv}>\n            {(props.left === 'help' || props.right === 'help') &&\n                <Dialog open={help} onClose={() => setHelp(false)}>\n                    <DialogTitle>What's Rchat ?</DialogTitle>\n                    <h3>If you need help that much call 911</h3>\n                </Dialog>\n            }\n            {renderSide(props.left)}\n            <h1 style={styles.title}>Rchat</h1>\n            {renderSide(props.right)}\n            {profile && <Redirect push to=\"/me\" />}\n            {rooms && <Redirect push to=\"/choose\" />}\n        </div>\n    )\n}\n\nHeader.propTypes = {\n    right: PropTypes.oneOf([\n        'profile',\n        'rooms',\n        'help'\n    ]).isRequired,\n    left: PropTypes.oneOf([\n        'profile',\n        'rooms',\n        'help'\n    ]).isRequired,\n}\n\nexport default Header;","import React from 'react';\nimport Header from './Header';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst styles = {\n    textFieldDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n    },\n}\n\nclass Profile extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            username:  window.localStorage.getItem(\"username\"),\n            uuid: window.localStorage.getItem(\"uuid\"),\n            showSucess: false,\n            showError: false,\n        }\n    }\n\n    resetUuid() {\n        var tmp = uuidv4()\n        this.setState({uuid: tmp});\n        window.localStorage.setItem(\"uuid\", tmp);\n    }\n\n    setUsername(name) {\n        this.setState({username: name});\n    }\n\n    saveUsername() {\n        if (this.state.username !== \"\") {\n            window.localStorage.setItem(\"username\", this.state.username);\n            this.setState({showSucess: true});\n        } else {\n            this.setState({showError: true});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Header left='help' right='rooms' />\n                <div style={{paddingTop: 150}}/>\n                <div>\n                    <Snackbar open={this.state.showSucess} onClose={() => this.setState({showSucess: false})} autoHideDuration={3000}>\n                        <MuiAlert onClose={() => this.setState({showSucess: false})} severity=\"success\">Username saved</MuiAlert>\n                    </Snackbar>\n                    <Snackbar open={this.state.showError} onClose={() => this.setState({showError: false})} autoHideDuration={3000}>\n                        <MuiAlert onClose={() => this.setState({showError: false})} severity=\"error\">Bad username not saved</MuiAlert>\n                    </Snackbar>\n                    <div style={styles.textFieldDiv}>\n                        <TextField\n                            id=\"username\"\n                            variant=\"outlined\"\n                            defaultValue={this.state.username}\n                            label={\"Your current username\"}\n                            style={{width: 500}}\n                            onChange={(event) => this.setUsername(event.currentTarget.value)}\n                            required\n                        />\n                        <div style={{paddingTop: 15}}/>\n                        <Button color=\"primary\" variant=\"contained\" onClick={() => this.saveUsername()}>\n                            Save\n                        </Button>\n                        <div style={{paddingTop: 30}}/>\n                        <TextField\n                            id=\"uuid\"\n                            variant=\"outlined\"\n                            value={this.state.uuid}\n                            label={\"Your uuid\"}\n                            style={{width: 500}}\n                            InputProps={{readOnly: true}}\n                        />\n                        <div style={{paddingTop: 15}}/>\n                        <Button color=\"primary\" variant=\"contained\" onClick={() => this.resetUuid()}>\n                            Generate new one\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React, { useState, useEffect } from 'react';\n\nimport database from '../firebase';\nimport firebase from 'firebase';\nimport Header from './Header';\n\nimport { useParams, Redirect } from \"react-router-dom\";\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 600,\n        height: 120,\n        //background: 'linear-gradient(90deg, rgba(4,230,255,1) 0%, rgba(9,121,121,1) 48%, rgba(19,49,252,1) 100%)',\n    },\n}));\n\n\nconst styles = {\n    mainDiv: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    roomName: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 30,\n        fontWeight: 900,\n        textAlign: 'center',\n        paddingBottom: 0,\n    },\n    messageSender: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 20,\n        fontWeight: 900,\n        textDecoration: 'underline'\n    },\n    messageText: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 15,\n        fontWeight: 900,\n    },\n    messageDate: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 20,\n        fontWeight: 900,\n    },\n    messageBar: {\n        position: 'absolute',\n        bottom: 10,\n        display: 'flex',\n        alignItems: 'center',\n        alignSelf: 'center'\n    },\n    messageDisplay: {\n        overflow: 'auto',\n        maxHeight: 600,\n        width: '70%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-end',\n    },\n    sendButton: {\n        height: 50,\n    },\n    messageInput: {\n        width: 500,\n    }\n}\n\nfunction Room() {\n    const st = useStyles();\n    let { room } = useParams();\n    const [roomInfo, setRoomInfo] = useState(undefined);\n    const [messageList, setMessageList] = useState(undefined);\n    const [userInfo, setUserInfo] = useState([]);\n    const [isRoomBad, setIsRoomBad] = useState(false);\n\n    const [message, setMessage] = useState(\"I, Giorno Giovanna will send a message\");\n\n    function createMessage(type, content) {\n        database.collection(\"rooms\").doc(room).collection(\"messages\").doc().set({\n            sender: userInfo,\n            type: type,\n            content: content,\n            date: firebase.firestore.Timestamp.fromDate(new Date())\n        }).then(setMessage(\"\"))\n    }\n\n    function displayMessages() {\n        if (messageList === undefined)\n            return (<div></div>);\n        return (\n            messageList.map((message) => {\n                return (\n                <Paper className={st.root} variant=\"outlined\">\n                    <div style={{display: 'flex', flexDirection: 'row'}}>\n                        <h3 style={styles.messageSender}>{message.sender[1] + \" \"}</h3>\n                        <h3 style={styles.messageDate}>{\"-\"}</h3>\n                        <h3 style={styles.messageDate}>{message.date.toDate().toLocaleString()}</h3>\n                    </div>\n                    <h3 style={styles.messageText}>{message.content}</h3>\n                </Paper>\n                );\n            })\n        )\n    }\n\n    useEffect(() => {\n        database.collection(\"rooms\").doc(room).get().then(function(doc) {\n            if (!doc.exists)\n                setIsRoomBad(true);\n            else {\n                database.collection(\"rooms\").doc(room)\n                .onSnapshot(function(doc) {\n                    setRoomInfo(doc);\n                })\n                database.collection(\"rooms\").doc(room).collection(\"messages\").orderBy(\"date\", 'asc').onSnapshot(function(querySnapshot) {\n                    let tmp = [];\n                    querySnapshot.forEach(function(message) {\n                        tmp.push(message.data());\n                    })\n                    setMessageList(tmp);\n                    console.log(tmp);\n                })\n            }\n        });\n\n        setUserInfo([window.localStorage.getItem(\"uuid\"), window.localStorage.getItem(\"username\")]);\n\n        return () => {\n        }\n    }, [room])\n\n    return (\n        <div style={styles.mainDiv}>\n            <div>\n                <Header left='rooms' right='profile' />\n                {isRoomBad && <Redirect push to={`/404/`} />}\n                {roomInfo && <h3 style={styles.roomName}>{roomInfo !== undefined && roomInfo.data().name}</h3>}\n            </div>\n            <div style={styles.messageDisplay}>\n                {displayMessages()}\n            </div>\n            <div style={styles.messageBar}>\n                <TextField\n                    style={styles.messageInput}\n                    id=\"message\"\n                    variant=\"outlined\"\n                    defaultValue={message}\n                    label=\"Enter a message to be sent\"\n                    required multiline\n                    value={message}\n                    onChange={(event) => setMessage(event.target.value)} \n                />\n                <Button style={styles.sendButton} color=\"primary\" variant=\"contained\" onClick={() => createMessage(\"text\", message)}>\n                    Send\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Room;","import React from 'react';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport Login from './Components/Login.jsx'\nimport Profile from './Components/Profile.jsx'\nimport Room from './Components/Room.jsx'\n\nfunction App() {\n    return (\n    <div>\n        <Router>\n            <Switch>\n                <Route exact path=\"/login\">\n                    <Login />\n                </Route>\n                <Route path=\"/me\">\n                    <Profile />\n                </Route>\n                <Route path=\"/rooms/:room\" children={<Room />} />\n                <Route path=\"/404\">\n                    <h6>This room does not exist yoo</h6>\n                </Route>\n                <Route path=\"*\">\n                    <h6>This room does not exist yoo</h6>\n                </Route>\n            </Switch>\n        </Router>\n    </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}