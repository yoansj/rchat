{"version":3,"sources":["Components/login.js","Components/utils.js","Components/Login.jsx","firebase.js","Components/Header.jsx","Components/Rooms.jsx","Components/Profile.jsx","Components/Room.jsx","App.js","serviceWorker.js","index.js"],"names":["enterButton","names","login","description","getRndInteger","min","max","Math","floor","random","styles","mainDiv","display","alignItems","flexDirection","title","fontFamily","fontSize","fontWeight","textAlign","paddingBottom","funnySentance","Login","defaultName","length","state","identify","joinButton","name","redirect","bool","this","setState","setRedirect","window","localStorage","setItem","uuidv4","alert","style","TextField","id","variant","defaultValue","label","required","onChange","event","setName","target","value","paddingTop","Button","color","onClick","checkValidity","push","to","React","Component","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","database","firestore","Header","props","useState","help","setHelp","profile","setProfile","rooms","setRooms","justifyContent","icon","renderSide","what","IconButton","left","right","Dialog","open","onClose","DialogTitle","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","roomList","overflow","maxHeight","AddRoom","show","setShow","hasPassword","setHasPassword","password","setPassword","aria-labelledby","aria-describedby","DialogContent","currentTarget","Switch","checked","DialogActions","newRoom","collection","doc","set","locked","creator","getItem","then","catch","error","console","message","sender","date","Timestamp","fromDate","Date","member","createRoom","Rooms","classes","dialog","setDialog","wrong","setWrong","currentRoom","setCurrentRoom","useEffect","onSnapshot","querySnapshot","test","forEach","data","log","Snackbar","autoHideDuration","severity","type","component","aria-label","className","subheader","ListSubheader","roomsArray","map","room","ListItem","button","JoinRoom","ListItemText","primary","ListItemIcon","RenderRooms","textFieldDiv","Profile","username","uuid","showSucess","showError","tmp","setUsername","saveUsername","InputProps","readOnly","resetUuid","roomName","Room","useParams","roomInfo","setRoomInfo","belongInRoom","setBelongInRoom","hasAuth","setHasAuth","showDialog","setShowDialog","found","get","checkAuth","disableBackdropClick","disableEscapeKeyDown","CircularProgress","App","exact","path","children","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdfb85c8.chunk.js","sourcesContent":["// Random sentances for the Login Component\n\nexport const enterButton = [\n    \"Enter the jungle\",\n    \"Join the party\",\n    \"Join the randomness\",\n    \"Join the chat\",\n    \"Enter Dexter's Laboratory\"\n]\n\nexport const names = [\n    \"John Doe\",\n    \"Jane Doe\",\n    \"Dexter (the scientist)\",\n]\n\nexport const login = [\n    \"Who are you ?\",\n    \"Identify yourself\",\n    \"Name must you enter\",\n]\n\nexport const description = [\n    \"A website where you chat with randoms\",\n    \"A website where a lot of things are random\",\n    \"A website where you can write a bunch of nonsense\"\n]","export function getRndInteger(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\n}\n\nexport function getRndFloat(min, max) {\n    return (Math.random() * (max - min + 1)) + min;\n}","import React from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { Redirect } from 'react-router';\n\nimport { description, enterButton, login, names } from './login';\nimport { getRndInteger } from './utils';\n\nconst styles = {\n    mainDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n    },\n    title: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 50,\n        fontWeight: 900,\n        textAlign: 'center',\n        paddingBottom: 0\n    },\n    funnySentance: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 30,\n        fontWeight: 900,\n        textAlign: 'center',\n        paddingBottom: 50\n    }\n}\n\nclass Login extends React.Component {\n    constructor() {\n        super();\n        this.defaultName = names[getRndInteger(0, names.length - 1)];\n        this.state = {\n            description: description[getRndInteger(0, description.length - 1)],\n            defaultName: this.defaultName,\n            identify: login[getRndInteger(0, login.length - 1)],\n            joinButton: enterButton[getRndInteger(0, enterButton.length - 1)],\n            name: this.defaultName,\n            redirect: false,\n        }\n    }\n\n    setRedirect(bool) {\n        this.setState({redirect: bool});\n    }\n\n    setName(name) {\n        this.setState({name: name});\n    }\n\n    checkValidity() {\n        if (this.state.name !== \"\" && this.state.name !== null) {\n            this.setRedirect(true);\n            window.localStorage.setItem(\"username\", this.state.name);\n            window.localStorage.setItem(\"uuid\", uuidv4());\n        } else {\n            alert(\"Invalid name :(\");\n        }\n    }\n\n    render() {\n        return (\n        <div style={styles.mainDiv}>\n            <h1 style={styles.title}>Rchat</h1>\n            <h3 style={styles.funnySentance}>\n                {this.state.description}\n            </h3>\n            <TextField\n                id=\"test\"\n                variant=\"outlined\"\n                defaultValue={this.state.defaultName}\n                label={this.state.identify}\n                required\n                onChange={(event) => this.setName(event.target.value)} \n            />\n            <div style={{paddingTop: 20}}/>\n            <Button color=\"primary\" variant=\"contained\" onClick={() => this.checkValidity()}>\n                {this.state.joinButton}\n            </Button>\n            {this.state.redirect && <Redirect push to=\"/choose\" />}\n        </div>\n        );\n    }\n}\n\nexport default Login;","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAAJQ6cSdyEOg6Jmtu0kLte2wn4VqsTCrM\",\n    authDomain: \"rchat-87159.firebaseapp.com\",\n    databaseURL: \"https://rchat-87159.firebaseio.com\",\n    projectId: \"rchat-87159\",\n    storageBucket: \"rchat-87159.appspot.com\",\n    messagingSenderId: \"298820429100\",\n    appId: \"1:298820429100:web:79e2ff175c526737423889\",\n    measurementId: \"G-6DK77K31E2\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst database = firebaseApp.firestore();\n\nexport default database;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect } from 'react-router';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport HelpIcon from '@material-ui/icons/Help';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ListIcon from '@material-ui/icons/List';\n\nfunction Header(props) {\n\n    const [help, setHelp] = useState(false);\n    const [profile, setProfile] = useState(false);\n    const [rooms, setRooms] = useState(false);\n\n    const styles = {\n        mainDiv: {\n            display: 'flex',\n            justifyContent: 'space-around',\n            flexDirection: 'row',\n        },\n        title: {\n            fontFamily: 'Roboto Mono',\n            fontSize: 50,\n            fontWeight: 900,\n            textAlign: 'center',\n            paddingBottom: 0,\n        },\n        icon: {\n            fontSize: 50,\n            color: 'black',\n        },\n    }\n\n    function renderSide(what) {\n        if (what === 'profile')\n            return (\n            <IconButton onClick={() => setProfile(true)}>\n                <PersonIcon style={styles.icon} />\n            </IconButton>\n            )\n        if (what === 'help')\n            return (\n            <IconButton onClick={() => setHelp(true)}>\n                <HelpIcon style={styles.icon} />\n            </IconButton>\n            )\n        if (what === 'rooms')\n            return (\n            <IconButton onClick={() => setRooms(true)}>\n                <ListIcon style={styles.icon} />\n            </IconButton>\n            )\n    }\n\n    return (\n        <div style={styles.mainDiv}>\n            {(props.left === 'help' || props.right === 'help') &&\n                <Dialog open={help} onClose={() => setHelp(false)}>\n                    <DialogTitle>What's Rchat ?</DialogTitle>\n                    <h3>If you need help that much call 911</h3>\n                </Dialog>\n            }\n            {renderSide(props.left)}\n            <h1 style={styles.title}>Rchat</h1>\n            {renderSide(props.right)}\n            {profile && <Redirect push to=\"/me\" />}\n            {rooms && <Redirect push to=\"/choose\" />}\n        </div>\n    )\n}\n\nHeader.propTypes = {\n    right: PropTypes.oneOf([\n        'profile',\n        'rooms',\n        'help'\n    ]).isRequired,\n    left: PropTypes.oneOf([\n        'profile',\n        'rooms',\n        'help'\n    ]).isRequired,\n}\n\nexport default Header;","import React, { useState, useEffect } from 'react';\nimport database from '../firebase';\nimport Header from './Header'\n\nimport { Redirect } from 'react-router';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Switch from '@material-ui/core/Switch';\n\nimport firebase from 'firebase';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n  }));\n\nconst styles = {\n    mainDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n    },\n    title: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 50,\n        fontWeight: 900,\n        textAlign: 'center',\n        paddingBottom: 0\n    },\n    roomList: {\n        maxWidth: '50%',\n        overflow: 'auto',\n        maxHeight: 500,\n    }\n}\n\nfunction JoinRoom(room, setRedirect, setDialog, setCurrentRoom) {\n    if (room[1].locked) {\n        setCurrentRoom(room);\n        setDialog(true);\n    }\n    else\n        setRedirect(room[0]);\n}\n\nfunction RenderRooms(roomsArray, setRedirect, setDialog, setCurrentRoom) {\n\n    return (\n        roomsArray.map((room) =>\n            <ListItem \n                button\n                onClick={() => JoinRoom(room, setRedirect, setDialog, setCurrentRoom)}\n            >\n                <ListItemText primary={room[1].name} />\n                <ListItemIcon>\n                    {room[1].locked && <LockIcon />}\n                </ListItemIcon>\n            </ListItem>\n        )\n    );\n}\n\nfunction AddRoom() {\n\n    const [show, setShow] = useState(false);\n    const [name, setName] = useState(\"Change my opinion: Joseph Joestar is the best jojo\");\n    const [hasPassword, setHasPassword] = useState(false);\n    const [password, setPassword] = useState(\"\");\n\n    function createRoom() {\n        var newRoom = database.collection(\"rooms\").doc();\n\n        newRoom.set({\n            name: name,\n            locked: hasPassword,\n            password: password,\n            creator: [window.localStorage.getItem(\"uuid\"), window.localStorage.getItem(\"username\")]\n        })\n        .then(function() {\n            setShow(false);\n            // Afficher le message salle créée\n        })\n        .catch(function(error) {\n            alert(\"error man\");\n            console.error(error);\n        })\n        newRoom.collection(\"messages\").doc().set({\n            message: \"Welcome to the room :)\",\n            sender: \"room\",\n            date: firebase.firestore.Timestamp.fromDate(new Date())\n        })\n        newRoom.collection(\"members\").doc().set({\n            member: [window.localStorage.getItem(\"uuid\"), window.localStorage.getItem(\"username\")]\n        })\n        .then(function() {\n            // On rejoint la salle ici\n        })\n        .catch(function(error) {\n            alert(\"error man\");\n            console.error(error);\n        })\n    }\n\n    return (\n        <div>\n            <Dialog\n            open={show}\n            onClose={() => setShow(false)}\n            aria-labelledby=\"room-dialog\"\n            aria-describedby=\"create-room\"\n            >\n                <DialogTitle id='hmm-create-room'>Create a new room</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        id=\"room-name\"\n                        variant=\"outlined\"\n                        label={\"Room name\"}\n                        defaultValue={name}\n                        style={{width: 500}}\n                        onChange={(event) => setName(event.currentTarget.value)}\n                    />\n                    <div style={{display: 'flex', flexDirection: 'row'}}>\n                        <Switch name=\"hasPassword\" checked={hasPassword} onChange={() => setHasPassword(!hasPassword)} />\n                        <h3>Password</h3>\n                    </div>\n                    {hasPassword && \n                        <TextField\n                            id=\"room-password\"\n                            variant=\"outlined\"\n                            label={\"Password\"}\n                            style={{width: 500}}\n                            onChange={(event) => setPassword(event.currentTarget.value)}\n                        />\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={() => createRoom()}>Create</Button>\n                </DialogActions>\n            </Dialog>\n            <Button color=\"primary\" variant=\"contained\" onClick={() => setShow(true)}>\n                Create new room\n            </Button>\n        </div>\n    );\n}\n\nfunction Rooms() {\n    const classes = useStyles();\n\n    const [rooms, setRooms] = useState([]);\n    const [redirect, setRedirect] = useState(\"\");\n    const [dialog, setDialog] = useState(false);\n    const [wrong, setWrong] = useState(false);\n    const [password, setPassword] = useState(\"\");\n    const [currentRoom, setCurrentRoom] = useState();\n\n    useEffect(() => {\n        database.collection(\"rooms\").onSnapshot(\n            function(querySnapshot) {\n                var test = [];\n                querySnapshot.forEach(function(doc) {\n                    test.push([doc.id, doc.data()]);\n                    console.log(doc);\n                    database.collection(\"rooms\").doc(doc.id).collection(\"messages\").onSnapshot(\n                        function(querySnapshot) {\n                            querySnapshot.forEach(function(doc) {\n                                console.log(\"=>\", doc.id, doc.data());\n                            })\n                        }\n                    )\n                })\n                setRooms(test);\n            }\n        )\n    }, [])\n\n    function checkPassword() {\n        if (password === currentRoom[1].password)\n            setRedirect(currentRoom[0]);\n        else\n            setWrong(true);\n    }\n\n    return (\n    <div>\n        <Header left='help' right='profile'/>\n        <Snackbar open={wrong} onClose={() => setWrong(false)} autoHideDuration={3000}>\n            <MuiAlert onClose={() => setWrong(false)} severity=\"error\">Bad password</MuiAlert>\n        </Snackbar>\n        <Dialog\n            open={dialog}\n            onClose={() => setDialog(false)}\n            aria-labelledby=\"password-dialog\"\n            aria-describedby=\"enter-room-password\"\n        >\n            <DialogTitle id='password-title'>This room is locked enter the password to continue</DialogTitle>\n            <DialogContent>\n                <TextField\n                    id=\"password\"\n                    variant=\"outlined\"\n                    label={\"Password\"}\n                    style={{width: 500}}\n                    type='password'\n                    onChange={(event) => setPassword(event.currentTarget.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button color=\"primary\" onClick={() => checkPassword()}>Enter</Button>\n            </DialogActions>\n        </Dialog>\n        <div style={styles.mainDiv}>\n            <AddRoom />\n            <List\n            style={styles.roomList}\n            component=\"nav\"\n            aria-label=\"rooms\"\n            className={classes.root}\n            subheader={\n                <ListSubheader component=\"div\" id=\"rooms-subheader\">\n                    Rooms\n                </ListSubheader>\n            }\n            >\n                {RenderRooms(rooms, setRedirect, setDialog, setCurrentRoom)}\n            </List>\n            {redirect !== \"\" && <Redirect push to={\"/\" + redirect} />}\n        </div>\n    </div>\n    );\n}\n\nexport default Rooms;","import React from 'react';\nimport Header from './Header';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst styles = {\n    textFieldDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n    },\n}\n\nclass Profile extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            username:  window.localStorage.getItem(\"username\"),\n            uuid: window.localStorage.getItem(\"uuid\"),\n            showSucess: false,\n            showError: false,\n        }\n    }\n\n    resetUuid() {\n        var tmp = uuidv4()\n        this.setState({uuid: tmp});\n        window.localStorage.setItem(\"uuid\", tmp);\n    }\n\n    setUsername(name) {\n        this.setState({username: name});\n    }\n\n    saveUsername() {\n        if (this.state.username !== \"\") {\n            window.localStorage.setItem(\"username\", this.state.username);\n            this.setState({showSucess: true});\n        } else {\n            this.setState({showError: true});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Header left='help' right='rooms' />\n                <div style={{paddingTop: 150}}/>\n                <div>\n                    <Snackbar open={this.state.showSucess} onClose={() => this.setState({showSucess: false})} autoHideDuration={3000}>\n                        <MuiAlert onClose={() => this.setState({showSucess: false})} severity=\"success\">Username saved</MuiAlert>\n                    </Snackbar>\n                    <Snackbar open={this.state.showError} onClose={() => this.setState({showError: false})} autoHideDuration={3000}>\n                        <MuiAlert onClose={() => this.setState({showError: false})} severity=\"error\">Bad username not saved</MuiAlert>\n                    </Snackbar>\n                    <div style={styles.textFieldDiv}>\n                        <TextField\n                            id=\"username\"\n                            variant=\"outlined\"\n                            defaultValue={this.state.username}\n                            label={\"Your current username\"}\n                            style={{width: 500}}\n                            onChange={(event) => this.setUsername(event.currentTarget.value)}\n                            required\n                        />\n                        <div style={{paddingTop: 15}}/>\n                        <Button color=\"primary\" variant=\"contained\" onClick={() => this.saveUsername()}>\n                            Save\n                        </Button>\n                        <div style={{paddingTop: 30}}/>\n                        <TextField\n                            id=\"uuid\"\n                            variant=\"outlined\"\n                            value={this.state.uuid}\n                            label={\"Your uuid\"}\n                            style={{width: 500}}\n                            InputProps={{readOnly: true}}\n                        />\n                        <div style={{paddingTop: 15}}/>\n                        <Button color=\"primary\" variant=\"contained\" onClick={() => this.resetUuid()}>\n                            Generate new one\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React, { useState, useEffect } from 'react';\n\nimport { useParams } from \"react-router-dom\";\n\nimport database from '../firebase';\nimport Header from './Header';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = {\n    mainDiv: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexDirection: 'row',\n    },\n    roomName: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 30,\n        fontWeight: 900,\n        textAlign: 'center',\n        paddingBottom: 0,\n    },\n}\n\nfunction Room() {\n    let { room } = useParams(); //room id\n    const [roomInfo, setRoomInfo] = useState();\n    const [belongInRoom, setBelongInRoom] = useState(false);\n    const [hasAuth, setHasAuth] = useState(false); // est-ce que on a déja vérifié l'authentification du user\n    const [showDialog, setShowDialog] = useState(true);\n    const [password, setPassword] = useState(\"\");\n    const [wrong, setWrong] = useState(false);\n\n\n    useEffect(() => {\n        database.collection(\"rooms\").doc(room)\n        .onSnapshot(function(doc) {\n            setRoomInfo(doc);\n            if (!belongInRoom && doc.data().locked)\n                checkAuth();\n        })\n    }, [belongInRoom,])\n\n    function checkAuth() {\n        let uuid = window.localStorage.getItem(\"uuid\");\n        let found = false;\n\n        database.collection(\"rooms\").doc(room).collection(\"members\").get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n                if (doc.data().member[0] === uuid) {\n                    found = true;\n                    console.log(\"Found my boiii !!!\");\n                }\n            })\n            setHasAuth(true);\n            setBelongInRoom(found);\n            setShowDialog(!found);\n        })\n    }\n\n    function checkPassword() {\n        if (password === roomInfo.data().password) {\n            setHasAuth(true);\n            setBelongInRoom(true);\n            database.collection(\"rooms\").doc(roomInfo.id)\n            .collection(\"members\").doc().set({member: [window.localStorage.getItem(\"uuid\"), window.localStorage.getItem(\"username\")]})\n            setShowDialog(false);\n        } else\n            setWrong(true);\n    }\n\n    return (\n        <div>\n            <Header left='rooms' right='profile' />\n            <div>\n                <Dialog\n                    open={showDialog}\n                    onClose={() => setShowDialog(false)}\n                    aria-labelledby=\"room-verification\"\n                    aria-describedby=\"check-identity\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                >\n                    {hasAuth === true && belongInRoom === false &&\n                        <DialogTitle id='password-title'>This room is locked enter the password to continue</DialogTitle>}\n                    <DialogContent>\n                        {hasAuth === false && <CircularProgress /> }\n                        {hasAuth === true && belongInRoom === false &&\n                            <TextField\n                                id=\"password\"\n                                variant=\"outlined\"\n                                label={\"Password\"}\n                                style={{width: 500}}\n                                type='password'\n                                onChange={(event) => setPassword(event.currentTarget.value)}\n                            />\n                        }\n                    </DialogContent>\n                    <DialogActions>\n                        {hasAuth === true && belongInRoom === false && <Button color=\"primary\" onClick={() => checkPassword()}>Enter</Button>}\n                    </DialogActions>\n                </Dialog>\n                <Snackbar open={wrong} onClose={() => setWrong(false)} autoHideDuration={3000}>\n                    <MuiAlert onClose={() => setWrong(false)} severity=\"error\">Bad password</MuiAlert>\n                </Snackbar>\n                {roomInfo && <h3 style={styles.roomName}>{roomInfo.data().name}</h3>}\n            </div>\n        </div>\n    )\n}\n\nexport default Room;","import React from 'react';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    useParams\n} from \"react-router-dom\";\n\nimport Login from './Components/Login.jsx'\nimport Rooms from './Components/Rooms.jsx'\nimport Profile from './Components/Profile.jsx'\nimport Room from './Components/Room.jsx'\n\nfunction App() {\n    return (\n    <div>\n        <Router>\n            <Switch>\n                <Route exact path=\"/rchat\">\n                    <Login />\n                </Route>\n                <Route path=\"/choose\">\n                    <Rooms />\n                </Route>\n                <Route path=\"/me\">\n                    <Profile />\n                </Route>\n                <Route path=\"/:room\" children={<Room />} />\n            </Switch>\n        </Router>\n    </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}